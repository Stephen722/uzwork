<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
  "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="UZ_Message">
	
	<!--<cache eviction="LRU" flushInterval="18000000" size="1000" readOnly="true"/>-->

    <!-- ***************************Selection************************** -->
    <!-- Retrieve Information                                           -->
    <!-- ************************************************************** -->
    
    <sql id="sourceColumns">
    	ms.id, ms.adminId, ms.title, ms.message, ms.cellPhone, ms.destination, DATE_FORMAT(ms.createdTime, "%Y-%m-%d %H:%i") createdTime,
    	(SELECT a.username FROM uz_admin a WHERE a.adminId = ms.adminId) adminUsername
    </sql>
    
    <sql id="messageColumns">
    	m.id, m.userId, m.title, m.message, m.sourceId, m.readB, m.type, m.deleteB, DATE_FORMAT(m.createdTime, "%Y-%m-%d %H:%i") createdTime
    </sql>
    
    <select id="getAllMessageSource" parameterType="Map" resultType="MessageSource">
		SELECT <include refid="sourceColumns" />
    	  FROM uz_message_source ms
    	 WHERE 1 = 1
    	 <if test="keywords != null and keywords != ''">
    	   AND ms.title like CONCAT('%',#{keywords},'%')
    	 </if>
    	 ORDER BY ms.id DESC
    	 LIMIT #{begin},#{end}
    </select>
    <select id="getAllMessageSourceAmount" parameterType="Map" resultType="int">
		SELECT COUNT(ms.id)
    	  FROM uz_message_source ms
    	 WHERE 1 = 1
    	 <if test="keywords != null and keywords != ''">
    	   AND ms.title like CONCAT('%',#{keywords},'%')
    	 </if>
    </select>

    <select id="getMessageById" parameterType="int" resultType="Message">
		SELECT <include refid="messageColumns" />
    	  FROM uz_message m
    	 WHERE m.id = #{id}
    </select>
        
    <select id="getAllMessageByUser" parameterType="Map" resultType="Message">
		SELECT <include refid="messageColumns" />
    	  FROM uz_message m
    	 WHERE m.userId = #{userId}
    	   AND m.deleteB = 0
    	 ORDER BY m.createdTime DESC
    	 LIMIT #{begin},#{end}
    </select>
    <select id="getAllMessageByUserAmount" parameterType="int" resultType="int">
		SELECT COUNT(m.id)
    	  FROM uz_message m
    	 WHERE userId = #{userId}
    	   AND m.deleteB = 0
    </select>
    
    <select id="getUnreadMessageAmountByUser" parameterType="int" resultType="int">
		SELECT COUNT(m.id)
    	  FROM uz_message m
    	 WHERE m.userId = #{userId}
    	   AND m.read = 0
    	   AND m.deleteB = 0
    </select>
    
    <!-- ***************************Insertion************************** -->
    <!-- Insert Information                                             -->
    <!-- ************************************************************** -->	
	<insert id="insertMessageSource" parameterType="MessageSource" useGeneratedKeys="true" keyProperty="id">
		INSERT uz_message_source(adminId, title, message, cellPhone, destination, createdTime)
	    VALUES (#{adminId}, #{title}, #{message}, #{cellPhone}, #{destination}, now())
	</insert>
	
	<insert id="insertMessage" parameterType="Message" useGeneratedKeys="true" keyProperty="id">
		INSERT uz_message(userId, title, message, sourceId, type, createdTime, readB, deleteB)
	    VALUES (#{userId}, #{title}, #{message}, #{sourceId}, #{type}, now(), 0, 0)
	</insert>
	
	<insert id="synchronizeMessage" parameterType="int" useGeneratedKeys="true" keyProperty="id">   
	    INSERT INTO uz_message(userId, title, message, sourceId, type, createdTime, readB, deleteB)
		SELECT #{userId}, ms.title, ms.message, ms.id, 1, ms.createdTime, 0, 0 
 		  FROM uz_message_source ms 
 		 WHERE ms.id NOT IN (select m.id FROM uz_message m WHERE m.userId = #{userId})
 		   AND (CASE 
 		   		WHEN ms.destination = 0 THEN TRUE
 				WHEN ms.destination = 1 AND ms.cellPhone LIKE CONCAT('%',(SELECT u.cellPhone FROM uz_user u WHERE u.userId = #{userId}),'%') 
 				THEN TRUE
 				ELSE FALSE
 				END) = TRUE
	</insert>
	
    <!-- ****************************Update**************************** -->
    <!-- Update Information                                             -->
    <!-- ************************************************************** -->	
	<update id="updateMessageReadFlag" parameterType="Map">
		UPDATE uz_message
		   SET readB = ${readB}
		 WHERE id = ${messageId}
		   AND userId = #{userId}
	</update>
	
	<!-- 逻辑删除，更新deleteB为1。当其message source被删除的时候，系统将删除其对应deleteB为1的message -->
	<update id="updateMessageDeleteFlag" parameterType="Map">
		UPDATE uz_message
		   SET deleteB = 1
		 WHERE id = ${messageId}
		   AND userId = #{userId}
		   AND type = 1
	</update>
		
    <!-- ****************************Delete**************************** -->
    <!-- Delete Information                                             -->
    <!-- ************************************************************** -->
 	<delete id="deleteMessageSource" parameterType="int">
 		DELETE FROM uz_message_source 
 		 WHERE id = #{messageId}
 	</delete>
 	
 	<delete id="deleteMessage" parameterType="Map">
 		DELETE FROM uz_message
 		 WHERE id = #{messageId}
		   AND userId = #{userId}
		   AND type = 0
 	</delete>
 	
 	<!-- 删除message source的时候，系统将删除其对应deleteB为1的message -->
 	<delete id="deleteAllMessageBySource" parameterType="int">
 		DELETE FROM uz_message
 		 WHERE messageId = #{messageId}
 		   AND deleteB = 1
 		   AND type = 1
 	</delete>
 
</mapper>